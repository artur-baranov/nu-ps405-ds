[
  {
    "objectID": "ps405-d_1.html",
    "href": "ps405-d_1.html",
    "title": "Last Quarter’s Review",
    "section": "",
    "text": "We are expected to have installed R and RStudio, if not see the installing R section.\nIn the discussion section, we will focus on coding and practicing what we have learned in the lectures.\nOffice hours are on Tuesday, 11-12:30 Scott 110.\nQuestions?\n\n\nDownload script"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PS405 Linear Models",
    "section": "",
    "text": "This site is designed to support students enrolled in the PS405 Linear Models course. Here, you will find lab materials, which are also available on Canvas. In the section, we will focus on coding and practicing the concepts covered in the lectures.\n\n\n\n\n\n   Thursday\n   11:00 AM – 11:50 AM\n   Scott Hall 212\n\n\n\n\n\n\n   Tuesday\n   11:00 AM – 12:30 PM\n   Scott Hall 110"
  },
  {
    "objectID": "ps405-d_1.html#terminology",
    "href": "ps405-d_1.html#terminology",
    "title": "Last Quarter’s Review",
    "section": "Terminology",
    "text": "Terminology"
  },
  {
    "objectID": "ps405-d_1.html#coding-terminology",
    "href": "ps405-d_1.html#coding-terminology",
    "title": "Last Quarter’s Review",
    "section": "Coding Terminology",
    "text": "Coding Terminology\n\nCode Chunk\nTo insert a Code Chunk, you can use Ctrl+Alt+I on Windows and Cmd+Option+I on Mac. Run the whole chunk by clicking the green triangle, or one/multiple lines by using Ctrl + Enter or Command + Return on Mac.\n\nprint(\"Code Chunk\")\n\n[1] \"Code Chunk\"\n\n\n\n\nFunction and Arguments\nMost of the functions we want to run require an argument For example, the function print() above takes the argument “Code Chunk”.\n\nfunction(argument)\n\n\n\nData structures\nThere are many data structures, but the most important to know the following.\n\nObjects. Those are individual units, e.g. a number or a word.\n\n\nnumber = 1\nnumber\n\nword = \"Northwestern\"\nword\n\n[1] 1\n[1] \"Northwestern\"\n\n\n\nVectors. Vectors are collections of objects. To create one, you will need to use function c().\n\n\nnumbers = c(1, 2, 3)\nnumbers\n\n[1] 1 2 3\n\n\n\nDataframes. Dataframes are the most used data structure. Last quarter you spend a lot of time working with it. It is a table with data. Columns are called variables, and those are vectors. You can access a column using $ operator.\n\n\ndf = data.frame(numbers, \n                numbers_multiplied = numbers * 2)\ndf\ndf$numbers_multiplied\n\n  numbers numbers_multiplied\n1       1                  2\n2       2                  4\n3       3                  6\n[1] 2 4 6\n\n\n\n\nData classes\nWe work with various classes of data, and the analysis we perform depends heavily on these classes.\n\nNumeric. Continuous data.\n\n\nnumeric_class = c(1.2, 2.5, 7.3)\nnumeric_class\nclass(numeric_class)\n\n[1] 1.2 2.5 7.3\n[1] \"numeric\"\n\n\n\nInteger. Whole numbers (e.g., count data).\n\n\ninteger_class = c(1:3)\nclass(integer_class)\n\n[1] \"integer\"\n\n\n\nCharacter. Usually, represent textual data.\n\n\nword\n\n[1] \"Northwestern\"\n\nclass(word)\n\n[1] \"character\"\n\n\n\nFactor. Categorical variables, where each value is treated as an identifier for a category.\n\n\ncolors = c(\"blue\", \"green\")\nclass(colors)\n\n[1] \"character\"\n\n\nAs you noticed, R did not identify the class of data correctly. We can change it using as.factor() function. You can easily change the class of your variable (as.numeric(), as.integer(), as.character())\n\ncolors = as.factor(colors)\nclass(colors)\n\n[1] \"factor\"\n\n\n\n\nLibraries\nQuite frequently, we use additional libraries to extend the capabilities of R. I’m sure you remember tidyverse. Let’s load it.\n\nlibrary(tidyverse)\n\nIf you updated your R or recently downloaded it, you can easily install libraries using the function install.packages().\n\n\nPipes\nPipes (%&gt;% or |&gt;) are helpful for streamlining the coding. They introduce linearity to the process of writing the code. In plain English, a pipe translates to “take an object, and then”.\n\nnumbers %&gt;%\n  print()\n\n[1] 1 2 3"
  },
  {
    "objectID": "ps405-d_2.html",
    "href": "ps405-d_2.html",
    "title": "Simple Linear Regression",
    "section": "",
    "text": "Download the data\nOrganize your directory\n\n\nDownload script\n\n\n\nDownload data"
  },
  {
    "objectID": "ps405-d_2.html#model-building",
    "href": "ps405-d_2.html#model-building",
    "title": "Simple Linear Regression",
    "section": "Model Building",
    "text": "Model Building\nLet’s run a simple model, and then check it’s summary.\n\nbasic_model = lm(Ladder_score ~ Social_support, whr)\n  \nsummary(basic_model)\n\n\nCall:\nlm(formula = Ladder_score ~ Social_support, data = whr)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.76562 -0.36701  0.01165  0.46577  1.49971 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)     -0.3428     0.3386  -1.013    0.313    \nSocial_support   7.3618     0.4183  17.599   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.6304 on 135 degrees of freedom\nMultiple R-squared:  0.6964,    Adjusted R-squared:  0.6942 \nF-statistic: 309.7 on 1 and 135 DF,  p-value: &lt; 2.2e-16\n\n\nA one unit increase in Social Support is associated with a 7.4 increase in the happiness score. What is the maximum value the Happiness Score can take?\n\nmax(whr$Ladder_score)\n\n[1] 7.804\n\n\nAnd now, let’s draw a histogram of the Social Support. So, how much does this model tell us?\n\nggplot(whr) +\n  ...(aes(x = Social_support))\n\nLet’s correct the Social_support variable a bit, transforming it to 0-100 scale. What do you think about the model now? What do you think about \\(R^2\\)?\n\nwhr = whr %&gt;%\n  mutate(Social_support_percentage = Social_support * 100)\n\nadjusted_model = lm(Ladder_score ~ Social_support_percentage, whr)\n  \nsummary(adjusted_model)\n\n\nCall:\nlm(formula = Ladder_score ~ Social_support_percentage, data = whr)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.76562 -0.36701  0.01165  0.46577  1.49971 \n\nCoefficients:\n                           Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)               -0.342811   0.338568  -1.013    0.313    \nSocial_support_percentage  0.073618   0.004183  17.599   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.6304 on 135 degrees of freedom\nMultiple R-squared:  0.6964,    Adjusted R-squared:  0.6942 \nF-statistic: 309.7 on 1 and 135 DF,  p-value: &lt; 2.2e-16\n\n\nLet’s write this regression formula out. Do you remember the general form?\n\\[\nY = \\beta_0 + \\beta_1X_1+\\epsilon\n\\]\nIn our case, this can be presented as\n\\[\n\\text{Happines} = -0.34 + 0.07\\text{ Social Support} + e\n\\]\nAlternatively,\n\\[\nY = -0.34+0.07x+u\n\\]\nNow, visualize the regression.\n\nggplot(whr, aes(x = Social_support_percentage, y = Ladder_score)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(x = \"Social Support (%)\",\n       y = \"Happiness Score\")"
  },
  {
    "objectID": "ps405-d_2.html#diagnostics",
    "href": "ps405-d_2.html#diagnostics",
    "title": "Simple Linear Regression",
    "section": "Diagnostics",
    "text": "Diagnostics\nLet’s analyze the regression. First, extract the residuals and plot their distribution. Does it follow \\(N(0, \\sigma^2)\\)?\n\nres = adjusted_model$residuals\n\nggplot() +\n  geom_histogram(aes(x = res), bins = 20) +\n  geom_vline(xintercept = mean(res), color = \"red\", size = 1.5)\n\n\n\n\n\n\n\n\nNow we need to check the constant variance assumption. Does it hold? What term is used to describe this satisfied assumption?\n\nyhat = adjusted_model$fitted.values\n\nggplot() +\n  geom_point(aes(x = yhat, y = res)) +\n  geom_hline(yintercept = 0, color = \"blue\") +\n  labs(title = \"Residuals vs fitted values plot\")\n\n\n\n\n\n\n\n\nExplore different patterns below"
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "PS405 Linear Models",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\nWeek\n\n\nTitle\n\n\nLink\n\n\nCode\n\n\nData\n\n\n\n\n\n\n1\n\n\nLast Quarter’s Review\n\n\n\n\n\n\n\n\n \n\n\n\n\n2\n\n\nSimple Linear Regression\n\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\nMultiple Linear Regression\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#description",
    "href": "index.html#description",
    "title": "PS405 Linear Models",
    "section": "",
    "text": "This site is designed to support students enrolled in the PS405 Linear Models course. Here, you will find lab materials, which are also available on Canvas. In the section, we will focus on coding and practicing the concepts covered in the lectures.\n\n\n\n\n\n   Thursday\n   11:00 AM – 11:50 AM\n   Scott Hall 212\n\n\n\n\n\n\n   Tuesday\n   11:00 AM – 12:30 PM\n   Scott Hall 110"
  },
  {
    "objectID": "index.html#additional-resources",
    "href": "index.html#additional-resources",
    "title": "PS405 Linear Models",
    "section": "Additional resources",
    "text": "Additional resources\n\nData sources\n\nPolitical Science datasets\n\n\n\nVisualization\n\nIntroduction to ggplot2\nMaps/Networks/Advanced vizualisation with ggplot2\nMaking interactive plots with ggplot2"
  },
  {
    "objectID": "ps405-d_3.html",
    "href": "ps405-d_3.html",
    "title": "Multiple Linear Regression",
    "section": "",
    "text": "Download script"
  },
  {
    "objectID": "ps405-d_3.html#fixed-effects",
    "href": "ps405-d_3.html#fixed-effects",
    "title": "Multiple Linear Regression",
    "section": "Fixed Effects",
    "text": "Fixed Effects\n\nwhr_subset = whr %&gt;%\n  select(Country_name, Ladder_score, Social_support, Perceptions_of_corruption, Continent)\n\nwhogov_subset = whogov %&gt;%\n  filter(year == 2020) %&gt;%\n  select(country_name, n_total, n_minister, n_individuals, system_category)\n\nwhr_whogov = whr_subset %&gt;%\n  left_join(whogov_subset, by = c(\"Country_name\" = \"country_name\")) \n\nwhr_whogov = whr_whogov %&gt;%\n  mutate(system_category = case_when(system_category == \"Parliamentary democracy\" ~ \"democracy\",\n                                     system_category == \"Presidential democracy\" ~ \"democracy\",\n                                     system_category == \"Mixed democratic\" ~ \"democracy\",\n                                     is.na(system_category) ~ NA,\n                                     T ~ \"autocracy\"))\n\nwhr_whogov$system_category = as.factor(whr_whogov$system_category)\n\n\nlibrary(ggeffects)\n\nWarning: package 'ggeffects' was built under R version 4.4.2\n\n\n\nmodel_fe = lm(Ladder_score ~ n_individuals + system_category, whr_whogov) \n\nggpredict(model_fe, terms= c(\"n_individuals\", \"system_category\")) %&gt;%\n  plot(show_ci = T, show_data = T) \n\nData points may overlap. Use the `jitter` argument to add some amount of\n  random variation to the location of data points and avoid overplotting."
  },
  {
    "objectID": "ps405-d_3.html#interactions",
    "href": "ps405-d_3.html#interactions",
    "title": "Multiple Linear Regression",
    "section": "Interactions",
    "text": "Interactions\n\nggplot(whr_whogov, aes(x = n_individuals, y = Ladder_score)) +\n  geom_point(aes(color = system_category)) +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 10 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 10 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nmodel_in = lm(Ladder_score ~ n_individuals * system_category, whr_whogov)\nsummary(model_in)\n\n\nCall:\nlm(formula = Ladder_score ~ n_individuals * system_category, \n    data = whr_whogov)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3.03942 -0.50231  0.01449  0.65371  2.18810 \n\nCoefficients:\n                                        Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)                             5.122743   0.711347   7.201  5.2e-11\nn_individuals                          -0.006231   0.022909  -0.272  0.78607\nsystem_categorydemocracy                2.253692   0.813821   2.769  0.00649\nn_individuals:system_categorydemocracy -0.048809   0.026984  -1.809  0.07292\n                                          \n(Intercept)                            ***\nn_individuals                             \nsystem_categorydemocracy               ** \nn_individuals:system_categorydemocracy .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.004 on 123 degrees of freedom\n  (10 observations deleted due to missingness)\nMultiple R-squared:  0.2556,    Adjusted R-squared:  0.2374 \nF-statistic: 14.08 on 3 and 123 DF,  p-value: 6.026e-08\n\nggpredict(model_in, terms= c(\"n_individuals\", \"system_category\")) %&gt;%\n  plot(show_ci = F, show_data = T) \n\nData points may overlap. Use the `jitter` argument to add some amount of\n  random variation to the location of data points and avoid overplotting.\n\n\n\n\n\n\n\n\n\nFixed effects, viz\nInteractions\npolynomials and IV transformations"
  }
]